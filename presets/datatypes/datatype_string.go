// Code generated by "stringer -type=DataType"; DO NOT EDIT.

package datatypes

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Int32-6]
	_ = x[String-10]
	_ = x[TokenCount-11]
	_ = x[Bytes-13]
}

const (
	_DataType_name_0 = "Int32"
	_DataType_name_1 = "StringTokenCount"
	_DataType_name_2 = "Bytes"
)

var (
	_DataType_index_1 = [...]uint8{0, 6, 16}
)

func (i DataType) String() string {
	switch {
	case i == 6:
		return _DataType_name_0
	case 10 <= i && i <= 11:
		i -= 10
		return _DataType_name_1[_DataType_index_1[i]:_DataType_index_1[i+1]]
	case i == 13:
		return _DataType_name_2
	default:
		return "DataType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
